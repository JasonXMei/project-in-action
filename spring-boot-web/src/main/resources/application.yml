spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/spring-boot-web?characterEncoding=UTF-8&useUnicode=true&allowPublicKeyRetrieval=true&useSSL=false
    username: root
    password: Jason0313
    druid:
      # 初始化时建立物理连接的个数
      initialSize: 5
      # 最小连接池数量
      minIdle: 5
      # 最大连接池数量, CPU核数+1，也可以大些但不要超过20，数据库加锁时连接过多性能下降
      maxActive: 20
      # 获取连接时最大等待时间，单位毫秒
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句
      validationQuery: SELECT 1
      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用（高效，并且保证安全性；建议值为 true）
      testWhileIdle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnBorrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      poolPreparedStatements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true
      maxPoolPreparedStatementPerConnectionSize: 0
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作
      keepAlive: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: config,stat,slf4j
      filter:
        # 开启druid datasource的状态监控
        stat:
          enabled: true
          db-type: mysql
          # 开启慢sql监控，超过 slow-sql-millis 就认为是慢sql，记录到日志中， 单位毫秒（建议值 500）
          log-slow-sql: true
          slow-sql-millis: 500
      stat-view-servlet:
        # 启用StatViewServlet（监控页面， http://host:port/druid）
        enabled: true
        # 监控页面的登录账户
        login-username: admin
        # 监控页面的登录密码
        login-password: admin
        # 是否允许清空统计数据
        reset-enable: true

mybatis-plus:
  configuration:
    # 配置sql打印日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 指定 mapper.xml加载位置
  mapper-locations: "classpath*:mapper/*Mapper.xml"

swagger:
  enable: true
  title: Spring Boot Web
  desc: Spring Boot API List
  version: 1.0
  tokenName: Authorization
  tokenDesc: API Authorization Token
  tokenType: header
  basePackage: com.spring.boot.controller

